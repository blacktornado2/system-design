Overview of OOPS
Object Oriented Programming
Here object means real word entity like car, bike, ATM etc.
Goal of OOPS: Increase flexibility and manitainability of programs

Procedural programming vs. OOPS

Object and Classes

-> Class
Class: blueprint of an object(template)
A class is required to create an object
A class can create any no. of objects

Object: instance of a class
Object = procedures(methods) + properties(attributes)
- object: dog. Properties: age, breeed, color. Behaviours: bark, sleep, eat
- object: car. Properties: color, type, brand. Behavious: applyBreeaks, Drive, IncreaseSpeed
  Creating a new object: User ankit = new User();
  new: Keyword used to allocate memory for the object.


Pillar of OOPS

Relationship
- is-a relationship
- has-a relationship

* Encapsulation:
  Concept:
- Bundling the data (fields/properties) and the methods that operate on that data within a single unit (the class). 
- It also involves data hiding, restricting direct access to some of an object's components.
- This is typically achieved using private access modifiers for fields and providing public methods (getters and setters) to access and modify the data in a controlled manner.

1st pillar of OOPS - Data Abstraction
It hides the internal implementation and shows only essential functionality to the user
It can be achieved through interface and abstract classes
Car: we are only shown the breakPedal, and if we press it, car's speed will reduce, but HOW
Phone: how call is made is abstracted to user
Advantages: Increases security and confidentiality
