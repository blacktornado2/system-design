Sharding and Partitioning

Sharding: Method of distributing data across multiple machines
Partitioning: Splitting a subset of data within the same instance

------------------------------------------------------------------------------------------------------------------

How a database is scaled?

A database server is just a database proccess(mysqld, mongod) running on an EC2 machine

  

You put your database in production, serving real traffic
Starting
            ______________
Users ----> | API server |  ----> DB (100 writes per second)
            --------------

------------------------------------------------------------------------------------------------------------------

You are getting more users, that your DB is unable to manage
You scale up your DB, give it more CPU, RAM and Disk(Vertical Scaling)

            ______________
Users ----> | API server |  ----> DB (200 writes per second)
            --------------        +
                                  DB_replica

Bulkier server + Read replica

------------------------------------------------------------------------------------------------------------------

Your product went iral and your bulky db is unable to handle the load, so you scale up again(Vertical Scaling)

            ______________
Users ----> | API server |  ----> DB (1000 writes per second)
            --------------        +
                                  DB_replica(s)

------------------------------------------------------------------------------------------------------------------

But after a certain stage you know you would not be able to scale "up" your DB, because vertical scaling has limit
So, you will have to resort to Horizontal Scaling
Say, one DB server was handling 1000 WPS and we cannot scale up beyond that but we are getting 1500 WPS, we scale horizontally 
and split the data   

            ______________
Users ----> | API server |  ----> DB1 (50% of data, 750 WPS)
            --------------          +
                                  DB2 (50% of data, 750 WPS)
                                    +
                                  DB_replica(s)

By adding one more database server, we reduced the load to 750 WPS on each node and thus handled higher throughput

------------------------------------------------------------------------------------------------------------------

Each database server is thus a shard and we say that the data is partitioned
Overall, a database is harded while the data is partitioned

------------------------------------------------------------------------------------------------------------------

You partitioned 100 GB of total data into 5 mutually exclusive partitions
100 GB -> 30 GB + 10 GB + 30 GB + 20 GB + 10 GB

Each of these partitions can either live on one database server or a couple of them can share one server
And this depends on the no. of shards you have

------------------------------------------------------------------------------------------------------------------
Think of Partitioning as organizing within a single system.
Think of Sharding as distributing the workload across multiple systems.


------------------------------------------------------------------------------------------------------------------

Ref: https://www.youtube.com/watch?v=wXvljefXyEo






